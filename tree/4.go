package tree

/*
    2
   / \
  1   3
       \
        4

     4
   /   \
  2     7
 / \   / \
1   3 6   8
   /   \
  5     9
         \
          10



     4
   /   \
  2     7
 / \   / \
1   3 9   8
   / / \
  5 6   10

-----------------



  插入节点处于完全树的子节点, 那么失衡会向上传递(完全树所在的节点并不会失衡), 使得某一父节点
  不再平衡; 通过旋转使这颗树重新平衡, 至此失衡传递中断、可以直接退出。
  如树：
    2
   / \
  1   4
     / \
    3   5
  在插入6时, 4是完全树, 插入后不会导致4不平衡, 但会导致2不平衡

-----------------

avl树，插入一个数据后，是不是只需要进行一次配平操作？
 是的，插入一个数据后，AVL树最多只需要进行一次平衡操作。这是因为AVL树的定义是一种自平衡二叉搜索树，
 其中任何节点的两个子树的高度差最多为1。当插入一个新数据时，可能会导致某个节点的高度差变为2，此时需要
 进行一次平衡操作。平衡操作包括四种情况：左左旋转、左右旋转、右左旋转和右右旋转。进行一次平衡操作后，
 整棵树的高度差将恢复到满足AVL树的条件。
*/
